// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

enum RoleType {
  ADMIN
  EDITOR
  USER
}

enum AttributeTypeEnum {
  STRING
  DATE
  DATETIME
  NUMBER
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String
  name       String
  globalRole RoleType    @default(USER)
  roles      Role[]
  warehouses Warehouse[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Role {
  id        Int       @id @default(autoincrement())
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
  roleType  RoleType

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      Int?
  warehouseId Int
}

model Warehouse {
  id        Int       @id @default(autoincrement())
  name      String
  sizeX     Int
  sizeY     Int
  sizeZ     Int
  storages  Storage[] @relation("WarehouseToStorage")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  roles     Role[]
}

model Storage {
  id   Int    @id @default(autoincrement())
  name String

  positionX Int
  positionY Int
  sizeX     Int
  sizeY     Int
  sizeZ     Int
  warehouse Warehouse @relation("WarehouseToStorage", fields: [warehouseId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       Item[]   @relation("StorageToItem")
  warehouseId Int
}

model Item {
  id         Int         @id @default(autoincrement())
  name       String
  image      String
  storage    Storage?    @relation("StorageToItem", fields: [storageId], references: [id])
  value      Int
  outgoings  Outgoing[]
  attributes Attribute[]

  positionX Int
  positionY Int
  positionZ Int
  sizeX     Int
  sizeY     Int
  sizeZ     Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storageId Int?
}

model Outgoing {
  id          Int      @id @default(autoincrement())
  description String
  value       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Item        Item?    @relation(fields: [itemId], references: [id])
  itemId      Int?
}

model Category {
  id         Int             @id @default(autoincrement())
  name       String
  color      String
  parent     Category?       @relation("CategoryToCategory", fields: [categoryId], references: [id])
  attributes AttributeType[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  children   Category[]      @relation("CategoryToCategory")
  categoryId Int?
}

model AttributeType {
  id         Int               @id @default(autoincrement())
  type       AttributeTypeEnum
  name       String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  Category   Category?         @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Attribute {
  id        Int               @id @default(autoincrement())
  type      AttributeTypeEnum
  value     String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  Item      Item?             @relation(fields: [itemId], references: [id])
  itemId    Int?
}
