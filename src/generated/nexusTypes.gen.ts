/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as PrismaClient from ".prisma/client"
import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ConnectOrDisconnectRelation: { // input type
    connect?: NexusGenInputs['ConnectRelation'] | null; // ConnectRelation
    disconnect?: NexusGenInputs['ConnectRelation'] | null; // ConnectRelation
  }
  ConnectRelation: { // input type
    id: number; // Int!
  }
  CreateItemInput: { // input type
    image: string; // String!
    name: string; // String!
    positionX?: number | null; // Int
    positionY?: number | null; // Int
    positionZ?: number | null; // Int
    sizeX: number; // Int!
    sizeY: number; // Int!
    sizeZ: number; // Int!
    storage: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    value: number; // Int!
  }
  CreateStorageInput: { // input type
    name: string; // String!
    positionX: number; // Int!
    positionY: number; // Int!
    positionZ: number; // Int!
    sizeX: number; // Int!
    sizeY: number; // Int!
    sizeZ: number; // Int!
    warehouse: NexusGenInputs['ConnectRelation']; // ConnectRelation!
  }
  CreateWarehouseInput: { // input type
    name: string; // String!
    sizeX: number; // Int!
    sizeY: number; // Int!
    sizeZ: number; // Int!
  }
  LoginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  RegisterInput: { // input type
    email: string; // String!
    name: string; // String!
    password: string; // String!
  }
  UpdateItemInput: { // input type
    image?: string | null; // String
    name?: string | null; // String
    positionX?: number | null; // Int
    positionY?: number | null; // Int
    positionZ?: number | null; // Int
    sizeX?: number | null; // Int
    sizeY?: number | null; // Int
    sizeZ?: number | null; // Int
    storage?: NexusGenInputs['ConnectOrDisconnectRelation'] | null; // ConnectOrDisconnectRelation
    value?: number | null; // Int
  }
  UpdateStorageInput: { // input type
    name?: string | null; // String
    positionX?: number | null; // Int
    positionY?: number | null; // Int
    positionZ?: number | null; // Int
    sizeX?: number | null; // Int
    sizeY?: number | null; // Int
    sizeZ?: number | null; // Int
    warehouse?: NexusGenInputs['ConnectOrDisconnectRelation'] | null; // ConnectOrDisconnectRelation
  }
  UpdateWarehouseInput: { // input type
    name?: string | null; // String
    sizeX?: number | null; // Int
    sizeY?: number | null; // Int
    sizeZ?: number | null; // Int
  }
}

export interface NexusGenEnums {
  AttributeTypeEnum: PrismaClient.AttributeTypeEnum
  RoleTypeEnum: "ADMIN" | "EDITOR" | "USER"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
}

export interface NexusGenRootTypes {
  Attribute: PrismaClient.Attribute;
  AttributeType: PrismaClient.AttributeType;
  AuthenticationPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Category: PrismaClient.Category;
  Item: PrismaClient.Item;
  Mutation: {};
  Outgoing: PrismaClient.Outgoing;
  Position2D: { // root type
    x?: number | null; // Int
    y?: number | null; // Int
  }
  Position3D: { // root type
    x?: number | null; // Int
    y?: number | null; // Int
    z?: number | null; // Int
  }
  Query: {};
  Role: PrismaClient.Role;
  Size: { // root type
    x?: number | null; // Int
    y?: number | null; // Int
    z?: number | null; // Int
  }
  Storage: PrismaClient.Storage;
  Subscription: { // root type
    itemUpdated?: NexusGenRootTypes['Item'] | null; // Item
  }
  User: PrismaClient.User;
  Warehouse: PrismaClient.Warehouse;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ConnectOrDisconnectRelation: NexusGenInputs['ConnectOrDisconnectRelation'];
  ConnectRelation: NexusGenInputs['ConnectRelation'];
  CreateItemInput: NexusGenInputs['CreateItemInput'];
  CreateStorageInput: NexusGenInputs['CreateStorageInput'];
  CreateWarehouseInput: NexusGenInputs['CreateWarehouseInput'];
  LoginInput: NexusGenInputs['LoginInput'];
  RegisterInput: NexusGenInputs['RegisterInput'];
  UpdateItemInput: NexusGenInputs['UpdateItemInput'];
  UpdateStorageInput: NexusGenInputs['UpdateStorageInput'];
  UpdateWarehouseInput: NexusGenInputs['UpdateWarehouseInput'];
  AttributeTypeEnum: NexusGenEnums['AttributeTypeEnum'];
  RoleTypeEnum: NexusGenEnums['RoleTypeEnum'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  Date: NexusGenScalars['Date'];
}

export interface NexusGenFieldTypes {
  Attribute: { // field return type
    id: string | null; // ID
    item: Array<NexusGenRootTypes['Item'] | null>; // [Item]!
    type: NexusGenEnums['AttributeTypeEnum'] | null; // AttributeTypeEnum
    value: string | null; // String
  }
  AttributeType: { // field return type
    category: Array<NexusGenRootTypes['Category'] | null>; // [Category]!
    id: string | null; // ID
    name: string | null; // String
    type: NexusGenEnums['AttributeTypeEnum'] | null; // AttributeTypeEnum
  }
  AuthenticationPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Category: { // field return type
    children: NexusGenRootTypes['Category'][] | null; // [Category!]
    color: string | null; // String
    id: string | null; // ID
    items: NexusGenRootTypes['Item'][] | null; // [Item!]
    name: string | null; // String
    parent: Array<NexusGenRootTypes['Category'] | null> | null; // [Category]
  }
  Item: { // field return type
    attributes: NexusGenRootTypes['Attribute'][] | null; // [Attribute!]
    categories: NexusGenRootTypes['Category'][] | null; // [Category!]
    id: string | null; // ID
    image: string | null; // String
    name: string | null; // String
    outgoings: NexusGenRootTypes['Outgoing'][] | null; // [Outgoing!]
    position: NexusGenRootTypes['Position3D'] | null; // Position3D
    size: NexusGenRootTypes['Size'] | null; // Size
    storage: Array<NexusGenRootTypes['Storage'] | null>; // [Storage]!
    value: number | null; // Int
  }
  Mutation: { // field return type
    createItem: NexusGenRootTypes['Item'] | null; // Item
    createStorage: NexusGenRootTypes['Storage'] | null; // Storage
    createWarehouse: NexusGenRootTypes['Warehouse'] | null; // Warehouse
    deleteItem: NexusGenRootTypes['Item'] | null; // Item
    deleteStorage: NexusGenRootTypes['Storage'] | null; // Storage
    deleteWarehouse: NexusGenRootTypes['Warehouse'] | null; // Warehouse
    login: NexusGenRootTypes['AuthenticationPayload'] | null; // AuthenticationPayload
    register: NexusGenRootTypes['AuthenticationPayload'] | null; // AuthenticationPayload
    updateItem: NexusGenRootTypes['Item'] | null; // Item
    updateStorage: NexusGenRootTypes['Storage'] | null; // Storage
    updateWarehouse: NexusGenRootTypes['Warehouse'] | null; // Warehouse
  }
  Outgoing: { // field return type
    description: string | null; // String
    id: string | null; // ID
    item: Array<NexusGenRootTypes['Item'] | null>; // [Item]!
    value: number | null; // Int
  }
  Position2D: { // field return type
    x: number | null; // Int
    y: number | null; // Int
  }
  Position3D: { // field return type
    x: number | null; // Int
    y: number | null; // Int
    z: number | null; // Int
  }
  Query: { // field return type
    item: NexusGenRootTypes['Item'] | null; // Item
    me: NexusGenRootTypes['User'] | null; // User
    storage: NexusGenRootTypes['Storage'] | null; // Storage
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    warehouse: NexusGenRootTypes['Warehouse'] | null; // Warehouse
    warehouses: Array<NexusGenRootTypes['Warehouse'] | null> | null; // [Warehouse]
  }
  Role: { // field return type
    id: string | null; // ID
    roleType: NexusGenEnums['RoleTypeEnum'] | null; // RoleTypeEnum
    user: Array<NexusGenRootTypes['User'] | null>; // [User]!
    warehouse: Array<NexusGenRootTypes['Warehouse'] | null>; // [Warehouse]!
  }
  Size: { // field return type
    x: number | null; // Int
    y: number | null; // Int
    z: number | null; // Int
  }
  Storage: { // field return type
    id: string | null; // ID
    items: NexusGenRootTypes['Item'][] | null; // [Item!]
    name: string | null; // String
    position: NexusGenRootTypes['Position2D'] | null; // Position2D
    size: NexusGenRootTypes['Size'] | null; // Size
    warehouse: NexusGenRootTypes['Warehouse'][]; // [Warehouse!]!
  }
  Subscription: { // field return type
    itemUpdated: NexusGenRootTypes['Item'] | null; // Item
  }
  User: { // field return type
    email: string | null; // String
    globalRole: NexusGenEnums['RoleTypeEnum'] | null; // RoleTypeEnum
    id: string | null; // ID
    name: string | null; // String
    password: string | null; // String
    roles: NexusGenRootTypes['Role'][] | null; // [Role!]
    warehouses: NexusGenRootTypes['Warehouse'][] | null; // [Warehouse!]
  }
  Warehouse: { // field return type
    id: string | null; // ID
    name: string | null; // String
    roles: NexusGenRootTypes['Role'][] | null; // [Role!]
    size: NexusGenRootTypes['Size'] | null; // Size
    storages: NexusGenRootTypes['Storage'][] | null; // [Storage!]
    users: NexusGenRootTypes['User'][] | null; // [User!]
  }
}

export interface NexusGenFieldTypeNames {
  Attribute: { // field return type name
    id: 'ID'
    item: 'Item'
    type: 'AttributeTypeEnum'
    value: 'String'
  }
  AttributeType: { // field return type name
    category: 'Category'
    id: 'ID'
    name: 'String'
    type: 'AttributeTypeEnum'
  }
  AuthenticationPayload: { // field return type name
    token: 'String'
    user: 'User'
  }
  Category: { // field return type name
    children: 'Category'
    color: 'String'
    id: 'ID'
    items: 'Item'
    name: 'String'
    parent: 'Category'
  }
  Item: { // field return type name
    attributes: 'Attribute'
    categories: 'Category'
    id: 'ID'
    image: 'String'
    name: 'String'
    outgoings: 'Outgoing'
    position: 'Position3D'
    size: 'Size'
    storage: 'Storage'
    value: 'Int'
  }
  Mutation: { // field return type name
    createItem: 'Item'
    createStorage: 'Storage'
    createWarehouse: 'Warehouse'
    deleteItem: 'Item'
    deleteStorage: 'Storage'
    deleteWarehouse: 'Warehouse'
    login: 'AuthenticationPayload'
    register: 'AuthenticationPayload'
    updateItem: 'Item'
    updateStorage: 'Storage'
    updateWarehouse: 'Warehouse'
  }
  Outgoing: { // field return type name
    description: 'String'
    id: 'ID'
    item: 'Item'
    value: 'Int'
  }
  Position2D: { // field return type name
    x: 'Int'
    y: 'Int'
  }
  Position3D: { // field return type name
    x: 'Int'
    y: 'Int'
    z: 'Int'
  }
  Query: { // field return type name
    item: 'Item'
    me: 'User'
    storage: 'Storage'
    users: 'User'
    warehouse: 'Warehouse'
    warehouses: 'Warehouse'
  }
  Role: { // field return type name
    id: 'ID'
    roleType: 'RoleTypeEnum'
    user: 'User'
    warehouse: 'Warehouse'
  }
  Size: { // field return type name
    x: 'Int'
    y: 'Int'
    z: 'Int'
  }
  Storage: { // field return type name
    id: 'ID'
    items: 'Item'
    name: 'String'
    position: 'Position2D'
    size: 'Size'
    warehouse: 'Warehouse'
  }
  Subscription: { // field return type name
    itemUpdated: 'Item'
  }
  User: { // field return type name
    email: 'String'
    globalRole: 'RoleTypeEnum'
    id: 'ID'
    name: 'String'
    password: 'String'
    roles: 'Role'
    warehouses: 'Warehouse'
  }
  Warehouse: { // field return type name
    id: 'ID'
    name: 'String'
    roles: 'Role'
    size: 'Size'
    storages: 'Storage'
    users: 'User'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createItem: { // args
      data: NexusGenInputs['CreateItemInput']; // CreateItemInput!
    }
    createStorage: { // args
      data: NexusGenInputs['CreateStorageInput']; // CreateStorageInput!
    }
    createWarehouse: { // args
      data: NexusGenInputs['CreateWarehouseInput']; // CreateWarehouseInput!
    }
    deleteItem: { // args
      id: number; // Int!
    }
    deleteStorage: { // args
      id: number; // Int!
    }
    deleteWarehouse: { // args
      id: number; // Int!
    }
    login: { // args
      data: NexusGenInputs['LoginInput']; // LoginInput!
    }
    register: { // args
      data: NexusGenInputs['RegisterInput']; // RegisterInput!
    }
    updateItem: { // args
      data: NexusGenInputs['UpdateItemInput']; // UpdateItemInput!
      id: number; // Int!
    }
    updateStorage: { // args
      data: NexusGenInputs['UpdateStorageInput']; // UpdateStorageInput!
      id: number; // Int!
    }
    updateWarehouse: { // args
      data: NexusGenInputs['UpdateWarehouseInput']; // UpdateWarehouseInput!
      id: number; // Int!
    }
  }
  Query: {
    item: { // args
      id: number; // Int!
    }
    storage: { // args
      id: number; // Int!
    }
    users: { // args
      world?: string | null; // String
    }
    warehouse: { // args
      id: number; // Int!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Attribute" | "AttributeType" | "AuthenticationPayload" | "Category" | "Item" | "Mutation" | "Outgoing" | "Position2D" | "Position3D" | "Query" | "Role" | "Size" | "Storage" | "Subscription" | "User" | "Warehouse";

export type NexusGenInputNames = "ConnectOrDisconnectRelation" | "ConnectRelation" | "CreateItemInput" | "CreateStorageInput" | "CreateWarehouseInput" | "LoginInput" | "RegisterInput" | "UpdateItemInput" | "UpdateStorageInput" | "UpdateWarehouseInput";

export type NexusGenEnumNames = "AttributeTypeEnum" | "RoleTypeEnum";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Date" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: { prisma: PrismaClient.PrismaClient };
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}